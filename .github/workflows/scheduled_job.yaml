name: scheduled_test

on:
  schedule:
  - cron: "0 12 * * SUN"
  workflow_dispatch:

env:
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  Project-runner:
    name: Project runner
    env:
      TAG: "lfi,xss,fileupload,xxe,injection,traversal,disclosure,auth-bypass,ssrf,sqli,oast,rce"
      FORMAT: csv
      FULL_REPORT: true
      INCLUDE_ALL: true
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
        token: ${{ github.token }}
    
    - name: Install nuclei
      # fetch nuclei v2.7.7 binary, unzip and add to path
      run: |
        header='--header=authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
        wget "$header" https://github.com/projectdiscovery/nuclei/releases/download/v2.7.7/nuclei_2.7.7_linux_amd64.zip
        unzip nuclei*.zip
        echo "$PWD" >> $GITHUB_PATH
    
    - name: install poetry
      run: pip install poetry==1.1.13
    
    - name: install project
      run: poetry install --no-dev
    
    - name: run program
      run: poetry run project-seaweed tester
    
    - name: upload report
      uses: actions/upload-artifact@v3
      with:
        name: Reports
        path: |
          *.csv
          analysis.yaml
        retention-days: 1
  

  Update-repo:
    name: Update report repository
    runs-on: ubuntu-20.04
    needs: [Project-runner]

    steps:
    - name: fetch repo
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO_OWNER }}/seaweed-reports
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        persist-credentials: true

    - name: set env
      run: echo "TARGET_DIR=$(date -u +%Y/%b/%d)" >> $GITHUB_ENV
    
    - name: create dir
      run: mkdir -p ${{ env.TARGET_DIR }}
    
    - name: fetch artifact
      uses: actions/download-artifact@v3
      with:
        path: ${{ env.TARGET_DIR }}

    - name: update latest
      run: echo ${{ env.TARGET_DIR }} > latest.txt

    - name: commit & push
      run: |
         git config user.name github-actions
         git config user.email github-actions@github.com
         git add .
         git diff --quiet && git diff --staged --quiet || git commit -m"Add reports & update latest.txt"
         git push
  
  Extract-info:
    name: extract data from report
    runs-on: ubuntu-20.04
    needs: [Update-repo]

    steps:
    - name: fetch repo
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO_OWNER }}/seaweed-reports
    
    - name: set target directory
      run: echo "TARGET_DIR=$(date -u +%Y/%b/%d)" >> $GITHUB_ENV

    - name: extract info
      run: |
        yq() {
          docker run --rm -i -v "${PWD}/${{ env.TARGET_DIR }}":/workdir mikefarah/yq "$@"
            }

        for field in cves_tested blocks non_blocks partial_blocks
        do
          echo "$field=$(yq .$field Reports/analysis.yaml)" >> $GITHUB_ENV
        done

  Slack-notification:
    name: post slack message
    runs-on: ubuntu-20.04
    needs: [Extract-info]
    if: always()
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    steps:
    - name: Success
      if: ${{ jobs.Extract-info.result == 'success' }}
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
          "text": "Testing finished!",
          "attachments": [
            {
              "color": "28a745",
              "fields": [
                {
                  "title": "Status",
                  "value": "Complete"
                },
                {
                  "title": "cves tested",
                  "value": ${{ env.cves_tested }}
                },
                {
                  "title": "blocks",
                  "value": ${{ env.blocks }}
                },
                {
                  "title": "partial blocks",
                  "value": ${{ env.partial_blocks }}
                },
                {
                  "title": "non blocks",
                  "value": ${{ env.non_blocks }}
                }
              ]
            }
            ]
          }
    - name: Failure
      if: ${{ jobs.Project-runner.result != 'success' || jobs.Update-repo.result != 'success' || jobs.Extract-info.result != 'success'}}
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
          "text": "Seems like Seaweed ran into an error :/",
          "attachments": [
            {
              "color": "c91a23",
              "fields": [
                {
                  "title": "Status",
                  "value": "Incomplete"
                }
              ]
            }
            ]
          }